# We have a conf and classes directory, add to BBPATH
BBPATH .= ":${LAYERDIR}"

# We have recipes-* directories, add to BBFILES
BBFILES += "${LAYERDIR}/recipes-*/*/*.bb \
	${LAYERDIR}/recipes-*/*/*.bbappend"

# Set a variable to get to the top of the IoT Reference OS Kit metadata location.
META_REFKIT_CORE_BASE := '${LAYERDIR}'

BBFILE_COLLECTIONS += "refkit-core"
BBFILE_PATTERN_refkit-core = "^${LAYERDIR}/"
BBFILE_PRIORITY_refkit-core = "6"

LAYERDEPENDS_refkit-core = "core"

# There are multiple different ways for providing some of the
# dependencies. Here we assume that the dependencies are available if
# the layers that the refkit distro takes them from are present.
HAVE_META_OE = "${@ bb.utils.contains('BBFILE_COLLECTIONS', 'openembedded-layer', 'True', 'False', d) }"
HAVE_ATOP ??= "${HAVE_META_OE}"
HAVE_CRYPTSETUP ??= "${HAVE_META_OE}"
HAVE_CRYPTSETUP ??= "${HAVE_META_OE}"
HAVE_CAN_UTILS ??= "${HAVE_META_OE}"
HAVE_VIM ??= "${HAVE_META_OE}"
HAVE_HTOP ??= "${HAVE_META_OE}"
HAVE_META_SECURITY = "${@ bb.utils.contains('BBFILE_COLLECTIONS', 'security', 'True', 'False', d) }"
HAVE_KEYUTILS ??= "${HAVE_META_SECURITY}"
HAVE_META_NETWORKING = "${@ bb.utils.contains('BBFILE_COLLECTIONS', 'networking-layer', 'True', 'False', d) }"
HAVE_LOWPAN_TOOLS ??= "${HAVE_META_NETWORKING}"
HAVE_IFTOP ??= "${HAVE_META_NETWORKING}"
HAVE_META_IOT_WEB = "${@ bb.utils.contains('BBFILE_COLLECTIONS', 'iotweb', 'True', 'False', d) }"
HAVE_NODEJS ??= "${HAVE_META_IOT_WEB}"

HAVE_META_FLATPAK = "${@ bb.utils.contains('BBFILE_COLLECTIONS', 'flatpak-layer', 'True', 'False', d) }"
HAVE_FLATPAK ??= "${HAVE_META_FLATPAK}"
HAVE_OSTREE ??= "${HAVE_META_FLATPAK}"
